package GPP_Demos.goldbach_Paper.scripts

import groovy_parallel_patterns.DataDetails
import groovy_parallel_patterns.ResultDetails
import groovy_parallel_patterns.terminals.Collect
import groovy_parallel_patterns.terminals.EmitWithLocal

import GPP_Demos.goldbach_Paper.data.Prime as p
import GPP_Demos.goldbach_Paper.data.PrimeListSeqSimple as pl
import GPP_Demos.goldbach_Paper.data.Sieve as s

//usage runDemo goldbach_Paper/scripts/RunSimplePrimes N

int N = 0

if (args.size() == 0){
    N = 50000
}
else {
    N = Integer.parseInt(args[0])
}

def rDetails = new ResultDetails(rName: pl.getName(),
                 rInitMethod:pl.init,
                 rCollectMethod: pl.collector,
                 rFinaliseMethod: pl.finalise)

def eDetails = new DataDetails(dName:  p.getName(),
                dInitMethod: p.init,
                dCreateMethod: p.create,
                lName: s.getName(),
                lInitMethod: s.init,
                lInitData: [N])
print "Simple Primes, "
def startime = System.currentTimeMillis()

def emitter = new EmitWithLocal(eDetails: eDetails)

def collector = new Collect(rDetails: rDetails)

def endtime = System.currentTimeMillis()
def elapsedTime = endtime - startime
println "${elapsedTime} "
