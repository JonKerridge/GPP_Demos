package GPP_Demos.VisLogDemos

import GPP_Demos.VisLogDemos.*
import GPP_Library.*
import GPP_Library.connectors.reducers.*
import GPP_Library.connectors.spreaders.*
import GPP_Library.functionals.groups.*
import GPP_Library.terminals.*

def workers = 3


def m1 = [[0], [0], [0]]             // for stage 1
def m2 = [[100], [100], [100]]       // for stage 2
def m3 = [[1000], [1000], [1000]]    // for stage 3
def er = new TestExtract()

def emitterDetails = new DataDetails(dName: TestData.getName() ,
    dInitMethod: TestData.totalInitialise,
    dInitData: [20],
    dCreateMethod: TestData.create)

def resultDetails = new ResultDetails(rName: TestResult.getName(),
    rInitMethod: TestResult.init,
    rCollectMethod:  TestResult.collector,
    rFinaliseMethod: TestResult.finalise,
    rFinaliseData: [er])

def group1Details  = new GroupDetails( workers : workers,
    groupDetails: new LocalDetails[workers])
def group2Details  = new GroupDetails( workers : workers,
    groupDetails: new LocalDetails[workers])
def group3Details  = new GroupDetails( workers : workers,
    groupDetails: new LocalDetails[workers])

for ( w in 0..< workers){
  group1Details.groupDetails[w] = new LocalDetails( lName: TestWorker.getName(),
      lInitMethod: TestWorker.init,
      lFinaliseMethod: TestWorker.finalise )
  group2Details.groupDetails[w] = new LocalDetails( lName: TestWorker.getName(),
      lInitMethod: TestWorker.init,
      lFinaliseMethod: TestWorker.finalise )
  group3Details.groupDetails[w] = new LocalDetails( lName: TestWorker.getName(),
      lInitMethod: TestWorker.init,
      lFinaliseMethod: TestWorker.finalise )
}
group1Details.groupDetails[0].lInitData = [100, 0]
group1Details.groupDetails[1].lInitData = [100, 0]
group1Details.groupDetails[2].lInitData = [100, 0]

group2Details.groupDetails[0].lInitData = [100, 0]
group2Details.groupDetails[1].lInitData = [100, 0]
group2Details.groupDetails[2].lInitData = [100, 0]

group3Details.groupDetails[0].lInitData = [100, 0]
group3Details.groupDetails[1].lInitData = [100, 0]
group3Details.groupDetails[2].lInitData = [100, 0]

//@log 1 "./Vis20-"

def emitter = new Emit(
    eDetails: emitterDetails,
    logPhaseName: "emit",
    logPropertyName: "w1" )

def outFan = new OneFanAny (
    destinations: workers)

def stage1 = new AnyGroupList(
    gDetails: group1Details,
    function: TestData.func1,
    modifier: m1,
    workers: workers,
    logPhaseName: "stage1",
    logPropertyName: "w1")

def stage2 = new ListGroupList(
    gDetails: group2Details,
    function: TestData.func2,
    modifier: m2,
    workers: workers,
    logPhaseName: "stage2",
    logPropertyName: "w1")

def stage3 = new ListGroupAny(
    gDetails: group3Details,
    function: TestData.func3,
    modifier: m3,
    workers: workers,
    logPhaseName: "stage3",
    logPropertyName: "w1")

def inFan = new AnyFanOne(
    sources: workers)

def collector = new Collect(
    rDetails: resultDetails,
    logPhaseName: "collect",
    logPropertyName: "w1")

println "20Log: $er"
